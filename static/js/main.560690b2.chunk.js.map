{"version":3,"sources":["Components/CardName.js","Components/CardKeyBoardButton.js","Components/CardKeyBoard.js","Components/CardTrick.js","App.js","reportWebVitals.js","index.js"],"names":["CardName","result","selectFnc","listKey","selected","value","suit","onClick","className","includes","CardKeyBoardButton","onKeyPress","CardKeyBoard","makeCards","cards","i","push","suits","values","CardTrick","useState","setCards","currentCardIdx","setCurrentCardIdx","allCardsFilled","setAllCardsFilled","guessResult","setGuessResult","useEffect","length","compareCards","c1","c2","indexOf","centralCard","threeCards","sorted","sort","order","c","offset","guess","receiveKey","key","replacement","keyDown","e","toUpperCase","document","addEventListener","removeEventListener","map","card","idx","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.560690b2.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function CardName({result=false, selectFnc, listKey, selected, value, suit}) {\r\n    \r\n    const onClick = () => {\r\n        if(selectFnc != null)\r\n            selectFnc(listKey)\r\n    }\r\n    return (\r\n        <div onClick={onClick} className={'cardname' + (selected ? ' selected' : '') + (result ? ' result' : '')}>\r\n            <div className='cardvalue'>{value}</div>\r\n            <div className={'cardsuit' + (['♥', '♦'].includes(suit) ? ' cardsuit-red' : ' cardsuit-black')}>{suit}</div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function CardKeyBoardButton({value, onKeyPress}) {\r\n\r\n    function onClick() {\r\n        onKeyPress(value);\r\n    }\r\n\r\n    return (\r\n        <div className='card-keyboard-button' onClick={onClick}>{value}</div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport CardKeyBoardButton from './CardKeyBoardButton'\r\n\r\nexport default function CardKeyBoard({onKeyPress}) {\r\n    return (\r\n        <div className='card'>\r\n            <h2>Keyboard</h2>\r\n            <hr></hr>\r\n            <div className='card-keyboard-group'>\r\n                <CardKeyBoardButton onKeyPress={onKeyPress} value={'♠'}/>\r\n                <CardKeyBoardButton onKeyPress={onKeyPress} value={'♥'}/>\r\n                <CardKeyBoardButton onKeyPress={onKeyPress} value={'♣'}/>\r\n                <CardKeyBoardButton onKeyPress={onKeyPress} value={'♦'}/>\r\n            </div>\r\n            <div className='card-keyboard-group'>\r\n                <CardKeyBoardButton onKeyPress={onKeyPress} value={'A'}/>\r\n                <CardKeyBoardButton onKeyPress={onKeyPress} value={'2'}/>\r\n                <CardKeyBoardButton onKeyPress={onKeyPress} value={'3'}/>\r\n                <CardKeyBoardButton onKeyPress={onKeyPress} value={'4'}/>\r\n                <CardKeyBoardButton onKeyPress={onKeyPress} value={'5'}/>\r\n                <CardKeyBoardButton onKeyPress={onKeyPress} value={'6'}/>\r\n                <CardKeyBoardButton onKeyPress={onKeyPress} value={'7'}/>\r\n                <CardKeyBoardButton onKeyPress={onKeyPress} value={'8'}/>\r\n                <CardKeyBoardButton onKeyPress={onKeyPress} value={'9'}/>\r\n                <CardKeyBoardButton onKeyPress={onKeyPress} value={'10'}/>\r\n                <CardKeyBoardButton onKeyPress={onKeyPress} value={'J'}/>\r\n                <CardKeyBoardButton onKeyPress={onKeyPress} value={'Q'}/>\r\n                <CardKeyBoardButton onKeyPress={onKeyPress} value={'K'}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport './CardTrick.css'\r\nimport CardName from './CardName'\r\nimport CardKeyBoard from './CardKeyBoard'\r\n\r\nconst makeCards = () => {\r\n    let cards = []\r\n    for (let i = 0; i < 4; i++)\r\n        cards.push({\r\n            value: '-',\r\n            suit: '-'\r\n        })\r\n    return cards\r\n}\r\n\r\nconst suits = ['♠', '♥', '♣', '♦']\r\nconst values = ['2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K', 'A']\r\n\r\nexport default function CardTrick() {\r\n\r\n    const [cards, setCards] = useState(makeCards())\r\n\r\n    const [currentCardIdx, setCurrentCardIdx] = useState(0)\r\n    const [allCardsFilled, setAllCardsFilled] = useState(false)\r\n    const [guessResult, setGuessResult] = useState(null)\r\n\r\n    useEffect(() => {\r\n        if (currentCardIdx >= cards.length)\r\n            setAllCardsFilled(true)\r\n    }, [currentCardIdx, cards])\r\n\r\n    useEffect(() => {\r\n        const compareCards = (c1, c2) => {\r\n            if (values.indexOf(c1.value) === values.indexOf(c2.value))\r\n                return suits.indexOf(c2.suit) - suits.indexOf(c1.suit) // reversed\r\n            return values.indexOf(c1.value) - values.indexOf(c2.value)\r\n        }\r\n        const guess = () => {\r\n            let centralCard = cards[2]\r\n            let threeCards = [cards[0], cards[1], cards[3]]\r\n            let sorted = [...threeCards].sort(compareCards)\r\n            let order = ''\r\n            for (let c of threeCards) {\r\n                if (c === sorted[0])\r\n                    order += 'l'\r\n                if (c === sorted[1])\r\n                    order += 'm'\r\n                if (c === sorted[2])\r\n                    order += 'h'\r\n            }\r\n            let offset = ['porn', 'lmh', 'lhm', 'mlh', 'mhl', 'hlm', 'hml'].indexOf(order)\r\n            setGuessResult({\r\n                value: values[(values.indexOf(centralCard.value) + offset) % values.length],\r\n                suit: centralCard.suit\r\n            })\r\n        }\r\n        if (allCardsFilled) guess()\r\n    }, [allCardsFilled, cards])\r\n\r\n    const receiveKey = (key) => {\r\n        if (allCardsFilled)\r\n            return\r\n\r\n        if (suits.includes(key)) {\r\n            let replacement = suits.includes(cards[currentCardIdx].suit)\r\n            cards[currentCardIdx].suit = key;\r\n            setCards([...cards]);\r\n            if (!replacement && values.includes(cards[currentCardIdx].value))\r\n                setCurrentCardIdx(currentCardIdx + 1)\r\n        }\r\n\r\n        if (values.includes(key)) {\r\n            let replacement = values.includes(cards[currentCardIdx].value)\r\n            cards[currentCardIdx].value = key;\r\n            setCards([...cards]);\r\n            if (!replacement && suits.includes(cards[currentCardIdx].suit))\r\n                setCurrentCardIdx(currentCardIdx + 1)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const keyDown = (e) => {\r\n            let key = e.key.toUpperCase()\r\n            if (['A', '2', '3', '4', '5', '6', '7', '8', '9', 'J', 'Q', 'K'].includes(key)) {\r\n                receiveKey(key)\r\n                return\r\n            }\r\n            let dict = {'0' : '10', '1' : 'A', 'S' : '♠', 'H' : '♥', 'C' : '♣', 'D' : '♦'}\r\n            receiveKey(dict[key])\r\n        }\r\n        document.addEventListener('keydown', keyDown);\r\n        return () => document.removeEventListener('keydown', keyDown)\r\n    })\r\n\r\n    const reset = () => {\r\n        setCurrentCardIdx(0)\r\n        setGuessResult(null)\r\n        setAllCardsFilled(false)\r\n        setCards(makeCards)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <div className='card'>\r\n                    <h2>🎩 I will guess your card 🎩</h2>\r\n                    <hr></hr>\r\n                    <div>\r\n                        {\r\n                            cards && cards.map((card, idx) => {\r\n                                return <CardName key={idx} listKey={idx} selectFnc={setCurrentCardIdx} value={card.value} selected={idx === currentCardIdx} suit={card.suit} />\r\n                            })\r\n                        }\r\n                    </div>\r\n                    {\r\n                        guessResult && (\r\n                            <>\r\n                                <h3>I'm thinking of:</h3>\r\n                                <div>\r\n                                    <CardName result={true} value={guessResult.value} suit={guessResult.suit} />\r\n                                </div>\r\n                                <button onClick={reset}>Okay</button>\r\n                            </>\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <CardKeyBoard onKeyPress={receiveKey} />\r\n            </div>\r\n            <p className='note'>I may need an assistant</p>\r\n        </div>\r\n    )\r\n}\r\n","import CardTrick from \"./Components/CardTrick\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <CardTrick />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}